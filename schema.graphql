type ProjectToken @entity {
  id: ID!
  name: String!
  symbol: String!
  address: Bytes!
  updatedAt: BigInt!
  isDepositPaused: Boolean
  isWithdrawPaused: Boolean
  depositedAmount: BigDecimal
  lvr: BigDecimal
  pitAmount: BigDecimal
  borrowedAmount: BigDecimal
  outstandingAmount: BigDecimal
  borrowingLevelAmount: BigDecimal
  currentBorrowingLevel: BigDecimal
  underlyingTokens: [ERC20Token!]
}

type LendingToken @entity {
  id: ID!
  name: String!
  symbol: String!
  address: Bytes!
  updatedAt: BigInt!
  isPaused: Boolean
  borrowingLevelAmount: BigDecimal
  underlyingTokens: [ERC20Token!]
}

type ERC20Token @entity {
  id: ID!
  name: String!
  symbol: String!
  address: Bytes!
  linksNumber: BigDecimal
}

type BorrowLog @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  asset: String!
  prjToken: String!
  type: String!
  date: BigInt!
  userAddress: Bytes!
  prjTokenAddress: Bytes!
}

type LeveragedBorrowLog @entity(immutable: true) {
  id: ID!
  prjTokenPrice: BigDecimal!
  lendingTokenPrice: BigDecimal!
  marginAmount: BigDecimal!
  marginCount: BigDecimal!
  exposureAmount: BigDecimal!
  exposureLendingCount: BigDecimal!
  prjToken: String!
  lendingToken: String!
  type: String!
  date: BigInt!
  userAddress: Bytes!
  prjTokenAddress: Bytes!
  lendingTokenAddress: Bytes!
}

type CollateralDepositedHistory @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  date: BigInt!
}

type PITTokenHistory @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  date: BigInt!
}

type OutstandingHistory @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  date: BigInt!
}

type CollateralVSLoanRatioHistory @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  date: BigInt!
}

type LenderAPYHistory @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  date: BigInt!
}

type BorrowingAPYHistory @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  date: BigInt!
}

type LenderAggregateCapitalDepositedHistory @entity(immutable: true) {
  id: ID!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  date: BigInt!
}

type TotalState @entity {
  id: ID!
  type: String!
  amount: BigDecimal!
  lendingTokenAddress: Bytes
  updatedAt: BigInt!
}

type BorrowedState @entity {
  id: ID!
  prjTokenAddress: Bytes!
  lendingTokenAddress: Bytes
  updatedAt: BigInt!
  borrowerAddresses: [Borrower!]
}

type Borrower @entity {
  id: ID!
  address: Bytes!
  prjTokenAddress: Bytes!
  lendingTokenAddress: Bytes!
  updatedAt: BigInt!
  borrowedAmount: BigDecimal
  outstandingAmount: BigDecimal
  depositedAmount: BigDecimal
}