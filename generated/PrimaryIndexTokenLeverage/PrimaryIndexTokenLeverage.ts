// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LeveragedBorrow extends ethereum.Event {
  get params(): LeveragedBorrow__Params {
    return new LeveragedBorrow__Params(this);
  }
}

export class LeveragedBorrow__Params {
  _event: LeveragedBorrow;

  constructor(event: LeveragedBorrow) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get projectToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lendingToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get notionalExposure(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get lendingAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get margin(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get addingAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get totalDepositedAmount(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get borrowAmount(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PrimaryIndexTokenLeverage__calculateHFResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getHfNumerator(): BigInt {
    return this.value0;
  }

  getHfDenominator(): BigInt {
    return this.value1;
  }
}

export class PrimaryIndexTokenLeverage__calculateSafetyMarginResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getSafetyMarginNumerator(): BigInt {
    return this.value0;
  }

  getSafetyMarginDenominator(): BigInt {
    return this.value1;
  }
}

export class PrimaryIndexTokenLeverage__getLVRResult {
  value0: i32;
  value1: i32;

  constructor(value0: i32, value1: i32) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    return map;
  }

  getLvrNumerator(): i32 {
    return this.value0;
  }

  getLvrDenominator(): i32 {
    return this.value1;
  }
}

export class PrimaryIndexTokenLeverage extends ethereum.SmartContract {
  static bind(address: Address): PrimaryIndexTokenLeverage {
    return new PrimaryIndexTokenLeverage("PrimaryIndexTokenLeverage", address);
  }

  AUGUSTUS_REGISTRY(): Address {
    let result = super.call(
      "AUGUSTUS_REGISTRY",
      "AUGUSTUS_REGISTRY():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_AUGUSTUS_REGISTRY(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "AUGUSTUS_REGISTRY",
      "AUGUSTUS_REGISTRY():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MODERATOR_ROLE(): Bytes {
    let result = super.call("MODERATOR_ROLE", "MODERATOR_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MODERATOR_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MODERATOR_ROLE",
      "MODERATOR_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  augustusParaswap(): Address {
    let result = super.call(
      "augustusParaswap",
      "augustusParaswap():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_augustusParaswap(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "augustusParaswap",
      "augustusParaswap():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  calculateCollateralTokenCount(
    _projectToken: Address,
    notionalValue: BigInt
  ): BigInt {
    let result = super.call(
      "calculateCollateralTokenCount",
      "calculateCollateralTokenCount(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_projectToken),
        ethereum.Value.fromUnsignedBigInt(notionalValue)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateCollateralTokenCount(
    _projectToken: Address,
    notionalValue: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateCollateralTokenCount",
      "calculateCollateralTokenCount(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_projectToken),
        ethereum.Value.fromUnsignedBigInt(notionalValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateHF(
    expAmount: BigInt,
    margin: BigInt,
    borrowAmount: BigInt,
    lvrNumerator: BigInt,
    lvrDenominator: BigInt
  ): PrimaryIndexTokenLeverage__calculateHFResult {
    let result = super.call(
      "calculateHF",
      "calculateHF(uint256,uint256,uint256,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(expAmount),
        ethereum.Value.fromUnsignedBigInt(margin),
        ethereum.Value.fromUnsignedBigInt(borrowAmount),
        ethereum.Value.fromUnsignedBigInt(lvrNumerator),
        ethereum.Value.fromUnsignedBigInt(lvrDenominator)
      ]
    );

    return new PrimaryIndexTokenLeverage__calculateHFResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_calculateHF(
    expAmount: BigInt,
    margin: BigInt,
    borrowAmount: BigInt,
    lvrNumerator: BigInt,
    lvrDenominator: BigInt
  ): ethereum.CallResult<PrimaryIndexTokenLeverage__calculateHFResult> {
    let result = super.tryCall(
      "calculateHF",
      "calculateHF(uint256,uint256,uint256,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(expAmount),
        ethereum.Value.fromUnsignedBigInt(margin),
        ethereum.Value.fromUnsignedBigInt(borrowAmount),
        ethereum.Value.fromUnsignedBigInt(lvrNumerator),
        ethereum.Value.fromUnsignedBigInt(lvrDenominator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PrimaryIndexTokenLeverage__calculateHFResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  calculateLendingTokenCount(
    _lendingToken: Address,
    notionalValue: BigInt
  ): BigInt {
    let result = super.call(
      "calculateLendingTokenCount",
      "calculateLendingTokenCount(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_lendingToken),
        ethereum.Value.fromUnsignedBigInt(notionalValue)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateLendingTokenCount(
    _lendingToken: Address,
    notionalValue: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateLendingTokenCount",
      "calculateLendingTokenCount(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_lendingToken),
        ethereum.Value.fromUnsignedBigInt(notionalValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateMargin(
    projectToken: Address,
    safetyMarginNumerator: BigInt,
    safetyMarginDenominator: BigInt,
    expAmount: BigInt
  ): BigInt {
    let result = super.call(
      "calculateMargin",
      "calculateMargin(address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(projectToken),
        ethereum.Value.fromUnsignedBigInt(safetyMarginNumerator),
        ethereum.Value.fromUnsignedBigInt(safetyMarginDenominator),
        ethereum.Value.fromUnsignedBigInt(expAmount)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculateMargin(
    projectToken: Address,
    safetyMarginNumerator: BigInt,
    safetyMarginDenominator: BigInt,
    expAmount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateMargin",
      "calculateMargin(address,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(projectToken),
        ethereum.Value.fromUnsignedBigInt(safetyMarginNumerator),
        ethereum.Value.fromUnsignedBigInt(safetyMarginDenominator),
        ethereum.Value.fromUnsignedBigInt(expAmount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateSafetyMargin(
    projectToken: Address,
    margin: BigInt,
    exp: BigInt
  ): PrimaryIndexTokenLeverage__calculateSafetyMarginResult {
    let result = super.call(
      "calculateSafetyMargin",
      "calculateSafetyMargin(address,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(projectToken),
        ethereum.Value.fromUnsignedBigInt(margin),
        ethereum.Value.fromUnsignedBigInt(exp)
      ]
    );

    return new PrimaryIndexTokenLeverage__calculateSafetyMarginResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_calculateSafetyMargin(
    projectToken: Address,
    margin: BigInt,
    exp: BigInt
  ): ethereum.CallResult<
    PrimaryIndexTokenLeverage__calculateSafetyMarginResult
  > {
    let result = super.tryCall(
      "calculateSafetyMargin",
      "calculateSafetyMargin(address,uint256,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(projectToken),
        ethereum.Value.fromUnsignedBigInt(margin),
        ethereum.Value.fromUnsignedBigInt(exp)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PrimaryIndexTokenLeverage__calculateSafetyMarginResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  getLVR(_projectToken: Address): PrimaryIndexTokenLeverage__getLVRResult {
    let result = super.call("getLVR", "getLVR(address):(uint8,uint8)", [
      ethereum.Value.fromAddress(_projectToken)
    ]);

    return new PrimaryIndexTokenLeverage__getLVRResult(
      result[0].toI32(),
      result[1].toI32()
    );
  }

  try_getLVR(
    _projectToken: Address
  ): ethereum.CallResult<PrimaryIndexTokenLeverage__getLVRResult> {
    let result = super.tryCall("getLVR", "getLVR(address):(uint8,uint8)", [
      ethereum.Value.fromAddress(_projectToken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PrimaryIndexTokenLeverage__getLVRResult(
        value[0].toI32(),
        value[1].toI32()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getTokenPrice(token: Address): BigInt {
    let result = super.call(
      "getTokenPrice",
      "getTokenPrice(address):(uint256)",
      [ethereum.Value.fromAddress(token)]
    );

    return result[0].toBigInt();
  }

  try_getTokenPrice(token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenPrice",
      "getTokenPrice(address):(uint256)",
      [ethereum.Value.fromAddress(token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLeveragePosition(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isLeveragePosition",
      "isLeveragePosition(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isLeveragePosition(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isLeveragePosition",
      "isLeveragePosition(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidCollateralisation(
    margin: BigInt,
    exp: BigInt,
    lvrNumerator: BigInt,
    lvrDenominator: BigInt
  ): boolean {
    let result = super.call(
      "isValidCollateralisation",
      "isValidCollateralisation(uint256,uint256,uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(margin),
        ethereum.Value.fromUnsignedBigInt(exp),
        ethereum.Value.fromUnsignedBigInt(lvrNumerator),
        ethereum.Value.fromUnsignedBigInt(lvrDenominator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isValidCollateralisation(
    margin: BigInt,
    exp: BigInt,
    lvrNumerator: BigInt,
    lvrDenominator: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidCollateralisation",
      "isValidCollateralisation(uint256,uint256,uint256,uint256):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(margin),
        ethereum.Value.fromUnsignedBigInt(exp),
        ethereum.Value.fromUnsignedBigInt(lvrNumerator),
        ethereum.Value.fromUnsignedBigInt(lvrDenominator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  primaryIndexToken(): Address {
    let result = super.call(
      "primaryIndexToken",
      "primaryIndexToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_primaryIndexToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "primaryIndexToken",
      "primaryIndexToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class DeleteLeveragePositionCall extends ethereum.Call {
  get inputs(): DeleteLeveragePositionCall__Inputs {
    return new DeleteLeveragePositionCall__Inputs(this);
  }

  get outputs(): DeleteLeveragePositionCall__Outputs {
    return new DeleteLeveragePositionCall__Outputs(this);
  }
}

export class DeleteLeveragePositionCall__Inputs {
  _call: DeleteLeveragePositionCall;

  constructor(call: DeleteLeveragePositionCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get projectToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DeleteLeveragePositionCall__Outputs {
  _call: DeleteLeveragePositionCall;

  constructor(call: DeleteLeveragePositionCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get pit(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _augustusParaswap(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _AUGUSTUS_REGISTRY(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LeveragedBorrowCall extends ethereum.Call {
  get inputs(): LeveragedBorrowCall__Inputs {
    return new LeveragedBorrowCall__Inputs(this);
  }

  get outputs(): LeveragedBorrowCall__Outputs {
    return new LeveragedBorrowCall__Outputs(this);
  }
}

export class LeveragedBorrowCall__Inputs {
  _call: LeveragedBorrowCall;

  constructor(call: LeveragedBorrowCall) {
    this._call = call;
  }

  get projectToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get lendingToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get notionalExposure(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get marginCollateralAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get maxSlippage(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get buyCalldata(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class LeveragedBorrowCall__Outputs {
  _call: LeveragedBorrowCall;

  constructor(call: LeveragedBorrowCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAugustusParaswapCall extends ethereum.Call {
  get inputs(): SetAugustusParaswapCall__Inputs {
    return new SetAugustusParaswapCall__Inputs(this);
  }

  get outputs(): SetAugustusParaswapCall__Outputs {
    return new SetAugustusParaswapCall__Outputs(this);
  }
}

export class SetAugustusParaswapCall__Inputs {
  _call: SetAugustusParaswapCall;

  constructor(call: SetAugustusParaswapCall) {
    this._call = call;
  }

  get augustusParaswap_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get AUGUSTUS_REGISTRY_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetAugustusParaswapCall__Outputs {
  _call: SetAugustusParaswapCall;

  constructor(call: SetAugustusParaswapCall) {
    this._call = call;
  }
}

export class SetPrimaryIndexTokenAddressCall extends ethereum.Call {
  get inputs(): SetPrimaryIndexTokenAddressCall__Inputs {
    return new SetPrimaryIndexTokenAddressCall__Inputs(this);
  }

  get outputs(): SetPrimaryIndexTokenAddressCall__Outputs {
    return new SetPrimaryIndexTokenAddressCall__Outputs(this);
  }
}

export class SetPrimaryIndexTokenAddressCall__Inputs {
  _call: SetPrimaryIndexTokenAddressCall;

  constructor(call: SetPrimaryIndexTokenAddressCall) {
    this._call = call;
  }

  get _newPrimaryIndexToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPrimaryIndexTokenAddressCall__Outputs {
  _call: SetPrimaryIndexTokenAddressCall;

  constructor(call: SetPrimaryIndexTokenAddressCall) {
    this._call = call;
  }
}
